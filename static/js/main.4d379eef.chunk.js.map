{"version":3,"sources":["features/submit.js","components/SliderField/SliderField.jsx","components/Label/Label.jsx","components/CustomFiled/CustomFiled.jsx","components/DurationField/DurationField.jsx","features/Form.js","features/validate.js","images/pizza.png","images/dfg.png","Pages/Home/Home.jsx","App.js","app/store.js","index.js","components/CustomFiled/style.module.scss"],"names":["a","url","data","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","response","submit","values","dispatch","console","log","postData","then","status","reset","json","SliderField","props","label","input","meta","touched","error","warning","value","onChange","className","type","e","target","htmlFor","Label","children","id","CustomFiled","inputClassName","inputComponent","InputComponent","options","style","inputSpan","placeholder","classnames","popUp","map","option","index","string","charAt","toUpperCase","slice","DurationField","mask","Form","foodType","handleSubmit","useDispatch","onSubmit","Field","name","component","min","max","step","parse","val","parseFloat","defaultValue","dynamicFieldcustom","selector","formValueSelector","connect","state","reduxForm","form","validate","errors","forEach","field","spiciness_scale","Home","src","pizza","alt","soup","App","rootReducer","combineReducers","formReducer","store","createStore","ReactDOM","render","Fragment","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.4d379eef.chunk.js","sourcesContent":["import {reset} from 'redux-form';\n\n\nasync function postData(url = '', data = {}) {\n\n  const response = await fetch(url, {\n    method: 'POST', \n    mode: 'cors', \n    cache: 'no-cache', \n    credentials: 'same-origin', \n    headers: {\n      'Content-Type': 'application/json'      \n    },\n    redirect: 'follow', \n    referrerPolicy: 'no-referrer', \n    body: JSON.stringify(data) \n  });\n  return response;\n} \n\nexport default function submit(values,dispatch) {\n  console.log(values)\n  \n  postData('https://frosty-wood-6558.getsandbox.com:443/dishes', values)\n  .then(response => {\n   console.log(response.status)\n   if(response.status===200){\n    dispatch(reset('recipe'))\n   }\n   return  response.json()\n  })\n  .then(data => {\n    console.log(data); \n  });\n\n}\n\n","import React from 'react'\nimport './SliderField.scss'\nimport { PropTypes } from \"prop-types\";\n\n\nfunction SliderField(props) {\n  let {\n    label,\n    input,\n    meta: { touched, error, warning }\n\n  } = props\n  const {\n    value,\n    onChange\n  } = input\nreturn (\n\n   <div className=\"slider\">\n      <input {...input} className=\"slider-input\" type=\"range\" onChange={(e)=>{onChange(e.target.value)}} {...props}/>\n      <label htmlFor=\"\" className=\"lbl\">{label}</label>\n      {touched &&\n      ((error && <span className=\"error\">{error}</span>) ||\n        (warning && <span>{warning}</span>))}  \n      <p>{value}</p>\n   </div>\n)\n}\n\nSliderField.propTypes ={\n  label:PropTypes.string,\n  meta: PropTypes.object,\n  input:PropTypes.any\n}\n\nexport default SliderField","import React from \"react\";\nimport { PropTypes } from \"prop-types\";\n\n\nfunction Label(props) {\n  const { children, className, id } = props;\n  return (\n    <label className={className} htmlFor={id}>\n      {children}\n    </label>\n  );\n}\n\n\nLabel.propTypes = {\n  children:PropTypes.any,\n  className:PropTypes.any,\n  id:PropTypes.string\n}\n\nexport default Label;\n","import React from \"react\";\nimport style from \"./style.module.scss\";\nimport Label from \"../Label\";\nimport classnames from \"classnames\";\nimport { PropTypes } from \"prop-types\";\n\n\nfunction CustomFiled(props) {\n  let {\n    label,\n    type,\n    meta: { touched, error, warning },\n    inputClassName,\n    inputComponent: InputComponent = \"input\",\n    id,\n    options,\n    input,\n  } = props;\n\n  function capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n  return (\n    <div className={style.inputSpan}>\n      <InputComponent\n        placeholder={label}\n        className={classnames(style.popUp, inputClassName)}\n        type={type}\n        id={id}\n        {...input}\n        {...props}\n      >\n        {options &&\n          options.map((option, index) => (\n            <option value={option} key={index}>\n              {capitalizeFirstLetter(option)}\n            </option>\n          ))}\n      </InputComponent>\n      <Label id={id} className={style.label}>\n        {label}\n      </Label>\n      {touched &&\n        ((error && <span>{error}</span>) ||\n          (warning && <span>{warning}</span>))}\n    </div>\n  );\n}\n\n\nCustomFiled.propTypes ={\n  label:PropTypes.string,\n  type:PropTypes.string,\n  meta: PropTypes.object,\n  inputClassName:PropTypes.any,\n  inputComponent: PropTypes.any,\n  id:PropTypes.string,\n  options:PropTypes.array,\n  input:PropTypes.any\n}\n\nexport default CustomFiled;\n","import React from \"react\";\nimport \"./DurationField.scss\";\nimport MaskedInput from 'react-text-mask'\nimport { PropTypes } from \"prop-types\";\n\n\n\nfunction DurationField(props) {\n  let {\n    id,\n    label,\n    type,\n    input,\n    meta: { touched, error, warning }\n  } = props\n\n  return (\n    <div className=\"input-span\">\n      <MaskedInput\n      placeholder=\"00:00:00\"\n      {...input}\n      className=\"pop-up\"\n      id={id} type={type} {...props}  \n      mask={[ /[0-9]/,/[0-9]/,':',/[0-5]/,/[0-9]/,':',/[0-5]/,/[1-9]/]}\n    />\n      <label htmlFor={id} className=\"lbl\">{label}</label>\n      {touched &&\n        ((error && <span className=\"error\">{error}</span>) ||\n          (warning && <span>{warning}</span>))}  \n\n    </div>\n  );\n}\n\nDurationField.propTypes ={\n  label:PropTypes.string,\n  type:PropTypes.string,\n  meta: PropTypes.object,\n  id:PropTypes.string,\n  input:PropTypes.any\n}\n\n\nexport default DurationField;\n","import React from \"react\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { Field, reduxForm, formValueSelector } from \"redux-form\";\nimport { validate } from \"../features/validate\";\nimport submit from \"../features/submit\";\nimport SliderField from \"../components/SliderField\";\nimport CustomFiled from \"../components/CustomFiled/CustomFiled\";\nimport { PropTypes } from \"prop-types\";\nimport DurationField from \"../components/DurationField\";\n\nlet Form = (props) => {\n  const { foodType, handleSubmit } = props;\n  const dispatch = useDispatch();\n  const dynamicFieldcustom = (foodType) => {\n    switch (foodType) {\n      case \"pizza\":\n        return (\n          <>\n            <Field\n              name=\"no_of_slices\"\n              component={CustomFiled}\n              type=\"number\"\n              label=\"No if slices\"\n              placeholder=\"2\"\n              min={1}\n              max={10}\n              step={1}\n              parse={(val) => parseFloat(val, 10)}\n            />\n            <Field\n              name=\"diameter\"\n              component={CustomFiled}\n              type=\"number\"\n              label=\"Diameter\"\n              placeholder=\"30.0\"\n              min={15}\n              max={100}\n              step={0.1}\n              parse={(val) => parseFloat(val, 10.0)}\n            />\n          </>\n        );\n      case \"soup\":\n        return (\n          <Field\n            name=\"spiciness_scale\"\n            component={SliderField}\n            type=\"range\"\n            defaultValue={2}\n            label=\"Spicy Level\"\n            min=\"1\"\n            max=\"10\"\n            step=\"1\"\n            parse={(val) => parseFloat(val, 10)}\n          />\n        );\n      case \"sandwich\":\n        return (\n          <Field\n            name=\"slices_of_bread\"\n            component={CustomFiled}\n            type=\"number\"\n            label=\"Number of slices\"\n            placeholder=\"2\"\n            min={1}\n            max={100}\n            step={1}\n            parse={(val) => parseFloat(val, 10)}\n          />\n        );\n      default:\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit((values) => submit(values, dispatch))}>\n      <Field name=\"name\" id=\"name\" component={CustomFiled} label=\"Name\" />\n      <Field\n        name=\"preparation_time\"\n        component={DurationField}\n        type=\"text\"\n        label=\"Preparation Time\"\n        placeholder=\"00:00:00\"\n      />\n      <Field\n        name=\"type\"\n        id=\"type\"\n        component={CustomFiled}\n        inputComponent=\"select\"\n        options={[\"\",\"pizza\", \"soup\", \"sandwich\"]}\n        label=\"type\"\n      />\n      {foodType && dynamicFieldcustom(foodType)}\n      <div className=\"btn-wrapper\">\n        <button className=\"btn\" type=\"submit\">\n          Send\n        </button>\n      </div>\n    </form>\n  );\n};\n\nconst selector = formValueSelector(\"recipe\");\nForm = connect((state) => {\n  const foodType = selector(state, \"type\");\n\n  return {\n    foodType,\n  };\n})(Form);\n\nForm = reduxForm({\n  // a unique name for the form\n  form: \"recipe\",\n  validate,\n})(Form);\n\nForm.propTypes = {\n  foodType: PropTypes.string,\n  handleSubmit: PropTypes.func,\n};\n\nexport default Form;\n","\n\nexport const validate = values => {\n  const errors = {}\n  const requiredFields = [\n    'name',\n    'preparation_time',\n    'type',\n    'no_of_slices',\n    'diameter',\n    'slices_of_bread',\n    'spiciness_scale'\n\n  ]\n  requiredFields.forEach(field => {\n    if (!values[field]) {\n      errors[field] = 'Required'\n    }\n  })\n\n  if(values.type === \"soup\"){\n    if(!values.spiciness_scale){\n      errors['spiciness_scale'] = 'Required'\n    }\n  }\n\n  return errors\n}\n\n\n","export default __webpack_public_path__ + \"static/media/pizza.f196d9f2.png\";","export default __webpack_public_path__ + \"static/media/dfg.07a67bae.png\";","import React from 'react'\nimport Form from '../../features/Form'\nimport './Home.scss'\nimport pizza from '../../images/pizza.png'\nimport soup from '../../images/dfg.png'\n\n\nfunction Home() {\n  return (\n    <div className=\"homepage\">\n      <div className=\"wrapper\">\n      <div className=\"floating one\">\n        <img src={pizza} alt=\"\" />\n      </div>\n      <div className=\"floating two\">\n        <img src={soup} alt=\"\" />\n      </div>\n        <div className=\"container\">\n          <h1>Recipe</h1>\n          <Form/>\n        </div>\n      </div>\n      \n    </div>\n  )\n}\n\nexport default Home","import React from \"react\";\nimport \"./App.scss\";\nimport Home from \"./Pages/Home/Home\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","import { createStore, combineReducers } from \"redux\";\nimport { reducer as formReducer } from \"redux-form\";\n\nconst rootReducer = combineReducers({\n  form: formReducer,\n});\n\nexport const store = createStore(rootReducer);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport { store } from './app/store';\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.Fragment>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.Fragment>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputSpan\":\"style_inputSpan__3LkGx\",\"label\":\"style_label__PlFbw\",\"popUp\":\"style_popUp__hnnGd\"};"],"sourceRoot":""}