{"version":3,"sources":["features/submit.js","components/SliderField/SliderField.jsx","components/Label/Label.jsx","components/CustomFiled/CustomFiled.jsx","components/DurationField/DurationField.jsx","features/Form.js","features/validate.js","images/pizza.png","images/dfg.png","Pages/Home/Home.jsx","App.js","app/store.js","index.js","components/SliderField/style.module.scss","components/CustomFiled/style.module.scss","components/DurationField/style.module.scss"],"names":["a","url","data","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","response","submit","values","dispatch","console","log","name","SubmissionError","_error","reset","postData","then","status","json","catch","e","error","SliderField","props","label","input","meta","touched","warning","value","onChange","className","styles","inputSpan","sliderInput","type","target","htmlFor","Label","children","id","CustomFiled","inputClassName","inputcomponent","InputComponent","options","style","placeholder","classnames","popUp","numberInput","map","option","index","string","charAt","toUpperCase","slice","DurationField","mask","Form","foodType","handleSubmit","useDispatch","onSubmit","Field","component","min","max","step","parse","val","parseFloat","dynamicFieldcustom","selector","formValueSelector","connect","state","reduxForm","form","validate","errors","forEach","field","spiciness_scale","Home","src","pizza","alt","soup","App","rootReducer","combineReducers","formReducer","store","createStore","ReactDOM","render","Fragment","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.c3819c5c.chunk.js","sourcesContent":["import { reset, SubmissionError } from \"redux-form\"\n\nasync function postData(url = \"\", data = {}) {\n  const response = await fetch(url, {\n    method: \"POST\",\n    mode: \"cors\",\n    cache: \"no-cache\",\n    credentials: \"same-origin\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    redirect: \"follow\",\n    referrerPolicy: \"no-referrer\",\n    body: JSON.stringify(data),\n  })\n  return response\n}\n\nexport default function submit(values, dispatch) {\n  console.log(values.name)\n  if(values.name===\"aaa\"){\n    throw new SubmissionError({\n      name: 'User does not exist',\n      _error: 'Login failed!'\n    })\n  }\n  else{\n    dispatch(reset(\"recipe\"))\n\n  }\n\n  postData(\"https://frosty-wood-6558.getsandbox.com:443/dishes\", values)\n    .then((response) => {\n      console.log(response)\n      if (response.status === 200) {\n        dispatch(reset(\"recipe\"))\n      }\n      return response.json()\n    })\n    .then((data) => {\n      console.log(data)\n    })\n    .catch((e) => console.error(e))\n}\n","import React from \"react\"\nimport styles from \"./style.module.scss\"\nimport { PropTypes } from \"prop-types\"\n\nfunction SliderField(props) {\n  let {\n    label,\n    input,\n    meta: { touched, error, warning },\n  } = props\n  const { value, onChange } = input\n  return (\n    <div className={styles.inputSpan}>\n      <input\n        {...input}\n        className={styles.sliderInput}\n        value=\"1\"\n        type=\"range\"\n        onChange={(e) => {\n          onChange(e.target.value)\n        }}\n        {...props}\n      />\n      <label htmlFor=\"\" className={styles.label}>\n        {label}\n      </label>\n      \n      {touched &&\n        ((error && <span className={styles.error}>{error}</span>) ||\n          (warning && <span>{warning}</span>))}\n      <p className={styles.value}>{value}</p>\n    </div>\n  )\n}\n\nSliderField.propTypes = {\n  label: PropTypes.string,\n  meta: PropTypes.object,\n  input: PropTypes.any,\n}\n\nexport default SliderField\n","import React from \"react\"\nimport { PropTypes } from \"prop-types\"\n\n\nfunction Label(props) {\n  const { children, className, id } = props\n  return (\n    <label className={className} htmlFor={id}>\n      {children}\n    </label>\n  )\n}\n\n\nLabel.propTypes = {\n  children:PropTypes.any,\n  className:PropTypes.any,\n  id:PropTypes.string\n}\n\nexport default Label\n","import React from \"react\"\nimport style from \"./style.module.scss\"\nimport Label from \"../Label\"\nimport classnames from \"classnames\"\nimport { PropTypes } from \"prop-types\"\n\n\nfunction CustomFiled(props) {\n  let {\n    label,\n    type,\n    meta: { touched, error, warning },\n    inputClassName,\n    inputcomponent: InputComponent = \"input\",\n    id,\n    options,\n    input,\n  } = props\n\n  function capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1)\n  }\n  return (\n    <div className={style.inputSpan}>\n      <InputComponent\n        placeholder={label}\n        className={classnames(style.popUp, style.numberInput, inputClassName)}\n        type={type}\n        id={id}\n        {...input}\n        {...props}\n      >\n        {options &&\n          options.map((option, index) => (\n            <option value={option} key={index}>\n              {capitalizeFirstLetter(option)}\n            </option>\n          ))}\n      </InputComponent>\n      <Label id={id} className={style.label}>\n        {label}\n      </Label>\n      {touched &&\n        ((error && <span className={style.error}>{error}</span>) ||\n          (warning && <span>{warning}</span>))}\n    </div>\n  )\n}\n\n\nCustomFiled.propTypes ={\n  label:PropTypes.string,\n  type:PropTypes.string,\n  meta: PropTypes.object,\n  inputClassName:PropTypes.any,\n  inputcomponent: PropTypes.any,\n  id:PropTypes.string,\n  options:PropTypes.array,\n  input:PropTypes.any\n}\n\nexport default CustomFiled\n","import React from \"react\"\nimport MaskedInput from \"react-text-mask\"\nimport styles from \"./style.module.scss\"\nimport classnames from \"classnames\"\nimport { PropTypes } from \"prop-types\"\n\nfunction DurationField(props) {\n  let {\n    id,\n    label,\n    type,\n    inputClassName,\n    input,\n    meta: { touched, error, warning },\n  } = props\n\n  return (\n    <div className={styles.inputSpan}>\n      <MaskedInput\n        placeholder=\"00:00:00\"\n        {...input}\n        className={classnames(styles.popUp, inputClassName)}\n        id={id}\n        type={type}\n        {...props}\n        mask={[/[0-9]/, /[0-9]/, \":\", /[0-5]/, /[0-9]/, \":\", /[0-5]/, /[0-9]/]}\n      />\n      <label htmlFor={id} className={styles.label}>\n        {label}\n      </label>\n      {touched &&\n        ((error && <span className={styles.error}>{error}</span>) ||\n          (warning && <span>{warning}</span>))}\n    </div>\n  )\n}\n\nDurationField.propTypes = {\n  label: PropTypes.string,\n  type: PropTypes.string,\n  meta: PropTypes.object,\n  inputClassName: PropTypes.any,\n  id: PropTypes.string,\n  input: PropTypes.any,\n}\n\nexport default DurationField\n","import React from \"react\"\nimport { connect, useDispatch } from \"react-redux\"\nimport { Field, reduxForm, formValueSelector } from \"redux-form\"\nimport { validate } from \"../features/validate\"\nimport submit from \"../features/submit\"\nimport SliderField from \"../components/SliderField\"\nimport CustomFiled from \"../components/CustomFiled/CustomFiled\"\nimport { PropTypes } from \"prop-types\"\nimport DurationField from \"../components/DurationField\"\n\nlet Form = (props) => {\n  const { foodType, handleSubmit } = props\n  const dispatch = useDispatch()\n  const dynamicFieldcustom = (foodType) => {\n    switch (foodType) {\n      case \"pizza\":\n        return (\n          <>\n            <Field\n              name=\"no_of_slices\"\n              component={CustomFiled}\n              type=\"number\"\n              label=\"No if slices\"\n              placeholder=\"2\"\n              min={1}\n              max={10}\n              step={1}\n              parse={(val) => parseFloat(val, 10)}\n            />\n            <Field\n              name=\"diameter\"\n              component={CustomFiled}\n              type=\"number\"\n              label=\"Diameter\"\n              placeholder=\"30.0\"\n              min={15}\n              max={100}\n              step={0.1}\n              parse={(val) => parseFloat(val, 10.0)}\n            />\n          </>\n        )\n      case \"soup\":\n        return (\n          <Field\n            name=\"spiciness_scale\"\n            component={SliderField}\n            type=\"range\"\n            label=\"Spicy Level\"\n            min=\"1\"\n            max=\"10\"\n            step=\"1\"\n            parse={(val) => parseFloat(val, 10)}\n          />\n        )\n      case \"sandwich\":\n        return (\n          <Field\n            name=\"slices_of_bread\"\n            component={CustomFiled}\n            type=\"number\"\n            label=\"Number of slices\"\n            placeholder=\"2\"\n            min={1}\n            max={100}\n            step={1}\n            parse={(val) => parseFloat(val, 10)}\n          />\n        )\n      default:\n    }\n  }\n\n  return (\n    <form onSubmit={handleSubmit((values) => submit(values, dispatch))}>\n      <Field name=\"name\" id=\"name\" component={CustomFiled} label=\"Name\" />\n      <Field\n        name=\"preparation_time\"\n        component={DurationField}\n        type=\"text\"\n        label=\"Preparation Time\"\n        placeholder=\"00:00:00\"\n      />\n      <Field\n        name=\"type\"\n        id=\"type\"\n        component={CustomFiled}\n        inputcomponent=\"select\"\n        options={[\"\", \"pizza\", \"soup\", \"sandwich\"]}\n        label=\"type\"\n      />\n      {foodType && dynamicFieldcustom(foodType)}\n      <div className=\"btn-wrapper\">\n        <button className=\"btn\" type=\"submit\">\n          Send\n        </button>\n      </div>\n    </form>\n  )\n}\n\nconst selector = formValueSelector(\"recipe\")\nForm = connect((state) => {\n  const foodType = selector(state, \"type\")\n\n  return {\n    foodType,\n  }\n})(Form)\n\nForm = reduxForm({\n  // a unique name for the form\n  form: \"recipe\",\n  validate,\n})(Form)\n\nForm.propTypes = {\n  foodType: PropTypes.string,\n  handleSubmit: PropTypes.func,\n}\n\nexport default Form\n","export const validate = (values) => {\n  const errors = {}\n  const requiredFields = [\n    \"name\",\n    \"preparation_time\",\n    \"type\",\n    \"no_of_slices\",\n    \"diameter\",\n    \"slices_of_bread\",\n    \"spiciness_scale\",\n  ]\n  requiredFields.forEach((field) => {\n    if (!values[field]) {\n      errors[field] = \"Required\"\n    }\n  })\n\n  if (values.type === \"soup\") {\n    if (!values.spiciness_scale) {\n      errors[\"spiciness_scale\"] = \"Required\"\n    }\n  }\n\n  return errors\n}\n","export default __webpack_public_path__ + \"static/media/pizza.f196d9f2.png\";","export default __webpack_public_path__ + \"static/media/dfg.07a67bae.png\";","import React from \"react\"\nimport Form from \"../../features/Form\"\nimport \"./Home.scss\"\nimport pizza from \"../../images/pizza.png\"\nimport soup from \"../../images/dfg.png\"\n\nfunction Home() {\n  return (\n    <div className=\"homepage\">\n      <div className=\"wrapper\">\n        <div className=\"floating one\">\n          <img src={pizza} alt=\"\" />\n        </div>\n        <div className=\"floating two\">\n          <img src={soup} alt=\"\" />\n        </div>\n        <div className=\"container\">\n          <h1 className=\"heading\">Recipe</h1>\n          <Form />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Home\n","import React from \"react\"\nimport \"./App.scss\"\nimport Home from \"./Pages/Home/Home\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  )\n}\n\nexport default App\n","import { createStore, combineReducers } from \"redux\"\nimport { reducer as formReducer } from \"redux-form\"\n\nconst rootReducer = combineReducers({\n  form: formReducer,\n})\n\nexport const store = createStore(rootReducer)\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.scss\"\nimport App from \"./App\"\nimport { store } from \"./app/store\"\nimport { Provider } from \"react-redux\"\n\nReactDOM.render(\n  <React.Fragment>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.Fragment>,\n  document.getElementById(\"root\")\n)\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputSpan\":\"style_inputSpan__OOkfP\",\"sliderInput\":\"style_sliderInput__1a2K0\",\"label\":\"style_label__a6zSo\",\"value\":\"style_value__PDUsY\",\"error\":\"style_error__354EA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputSpan\":\"style_inputSpan__3LkGx\",\"label\":\"style_label__PlFbw\",\"popUp\":\"style_popUp__hnnGd\",\"error\":\"style_error__28rIk\",\"numberInput\":\"style_numberInput__YK57W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputSpan\":\"style_inputSpan__2EfPw\",\"label\":\"style_label__3H9yj\",\"popUp\":\"style_popUp__I60qE\",\"error\":\"style_error__2yhP3\"};"],"sourceRoot":""}